name: Demo App ArgoCD CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        cd app
        pip install -r requirements.txt

    - name: Run Flask application for a short period
      run: |
        cd app
        python demo_app.py
        PID=$!
        sleep 10
        kill $PID

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        cd app
        pip install -r requirements.txt

    - name: Run tests
      run: |
        cd app
        python -m unittest discover -s .

  dockerize:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Declare short SHA
      shell: bash
      run: |
        echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
        
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        cd app
        docker build -t ${{ secrets.DOCKER_USERNAME }}/demo-app:${{ env.sha_short }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/demo-app:${{ env.sha_short }}